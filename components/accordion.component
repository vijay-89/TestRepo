<apex:component >
    <apex:attribute name="importCSS" description="By default the value is set to true,set the value to false if you dont want to laod the default jQuery CSS" default="true" type="Boolean"/>
    <apex:outputPanel styleClass="custAaccordion">
        <apex:componentBody />
    </apex:outputPanel>
    
    
    <script>
        document.addEventListener('DOMContentLoaded',function(){
             scriptManager(initAccordion);
        });

        function initAccordion(){
            $j( ".custAaccordion" ).accordion({ 
                header: ".custHeader"
            });
        }
        

        var callBack;
        function scriptManager(callbackFn){
            
            if(callBack == null){
                callBack = callbackFn;
            }
            if (typeof jQuery !== 'undefined'){ 
               $j = jQuery.noConflict();
               
               if({!importCSS} == true || $j('link[href$="custom.min.css"]').length == 0){
                    $j('<link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jQuery_UI_1_10_2, 'css/ui-lightness/jquery-ui-1.10.2.custom.min.css')}" >').appendTo("head");
                }
               
               if(jQuery.ui){
                    initAccordion();                   
                }
                else{
                    loadScript('{!URLFOR($Resource.jQuery_UI_1_10_2, 'js/jquery-ui-1.10.2.custom.min.js')}',callBack);
                }
            }
            else{
                loadScript('{!URLFOR($Resource.jQuery_UI_1_10_2, 'js/jquery-1.9.1.min.js')}',scriptManager);
            }
        }
        
        function loadScript(url, callback){
            /*adding the script tag to the head as suggested before*/
           var head = document.getElementsByTagName('head')[0];
           var script = document.createElement('script');
           script.type = 'text/javascript';
           script.src = url;
        
           /*then bind the event to the callback function*/ 
           /*there are several events for cross browser compatibility*/
           script.onreadystatechange = callback;
           script.onload = callback;
        
           /*fire the loading*/
           head.appendChild(script);
        }
    </script>
    
</apex:component>