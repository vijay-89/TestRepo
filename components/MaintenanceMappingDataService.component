<apex:component controller="MaintenanceMappingController">
    <apex:includeScript value="{!URLFOR($Resource.nFORCE__angularJS, '/angularJS/angular-1.4.6/angular.min.js')}" />
    <script type="text/javascript">
    (function(){
        angular.module('maintenanceMappingApp')
            .service('dataService',['$q', function($q){

            return {
                getMappings : getMappings,
                retrieveTasks : retrieveTasks,
                saveMappings : saveMappings
            }

            function getMappings() {
                var deferred = $q.defer();

                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.MaintenanceMappingController.getMappings}',
                    function(result, event) {
                        setDeferred(deferred, result, event);
                    },
                    {escape: false}
                );

                return deferred.promise;
            }

            function retrieveTasks(){
                var deferred = $q.defer();

                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.MaintenanceMappingController.retrieveTasks}',
                    function(result, event) {
                        setDeferred(deferred, result, event);
                    },
                    {escape: false}
                );

                return deferred.promise;
            }

            function saveMappings(maintenanceType, mappings) {
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.MaintenanceMappingController.saveMappings}',
                    maintenanceType,
                    mappings,
                    function(result, event) {
                        setDeferred(deferred, result, event);
                    },
                    {escape: false}
                );

                return deferred.promise;
            }

            function setDeferred(deferred, result, event) {
                if(event.status) {
                    deferred.resolve(result, event);
                } else {
                    deferred.reject(event.message);
                }
            }
        }]);
    })();

    </script>
</apex:component>