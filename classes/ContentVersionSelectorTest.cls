@isTest
public with sharing class ContentVersionSelectorTest {
	@isTest
	private static void shouldReturnContentVersion() {
		Id contentVersionId = createContentVersion();

		Test.startTest();
		ContentVersion content = new ContentVersionSelector().fetchContentVersion((String) contentVersionId);
		Test.stopTest();

		System.assertEquals('üçó', content.VersionData.toString());
	}

	@isTest
	private static void shouldReturnNull_WhenNullId() {
		Test.startTest();
		ContentVersion content = new ContentVersionSelector().fetchContentVersion(null);
		Test.stopTest();

		System.assertEquals(null, content);
	}

	@isTest
	private static void shouldReturnNull_WhenInvalidId() {
		Test.startTest();
		ContentVersion content = new ContentVersionSelector().fetchContentVersion('M‚ù§Ô∏èJ');
		Test.stopTest();

		System.assertEquals(null, content);
	}

	private static Id createContentVersion() {
		ContentVersion content = new ContentVersion();
		content.PathOnClient = 'rage.pdf';
		content.Title = 'üåÆ';
		content.VersionData = Blob.valueOf('üçó');
		nFORCE.DmlUtility.insertObj(content);

		return content.Id;
	}
}